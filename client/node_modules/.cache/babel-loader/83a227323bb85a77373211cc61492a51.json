{"ast":null,"code":"import { createSelector } from 'reselect';\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector([selectShop], shop => shop.collections);\nexport const selectCollectionsForPreview = createSelector([selectCollections], // get all the keys, map over that array of keys, so we get the value of\n// the colections object at that key whihc returns an array\ncollections => collections ? Object.keys(collections).map(key => collections[key]) : []);\nexport const selectCollection = collectionUrlParam => createSelector([selectCollections], collections => collections ? collections[collectionUrlParam] : null);\nexport const selectIsCollectionFetching = createSelector([selectShop], shop => shop.isFetching); // tells us if our state has loaded so we won't rended a component with null values\n\nexport const selectIsCollectionsLoaded = createSelector([selectShop], // if null, which is a falsy value we double \"!!\" and we get the actual boolean value\nshop => !!shop.collections);","map":{"version":3,"sources":["/home/xavi/fullstack/react-crown-clothing/src/redux/shop/shop.selectors.js"],"names":["createSelector","selectShop","state","shop","selectCollections","collections","selectCollectionsForPreview","Object","keys","map","key","selectCollection","collectionUrlParam","selectIsCollectionFetching","isFetching","selectIsCollectionsLoaded"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAWA,KAAK,CAACC,IAApC;;AAEA,OAAO,MAAMC,iBAAiB,GAAGJ,cAAc,CAC9C,CAACC,UAAD,CAD8C,EAE7CE,IAAD,IAAUA,IAAI,CAACE,WAF+B,CAAxC;AAKP,OAAO,MAAMC,2BAA2B,GAAGN,cAAc,CACxD,CAACI,iBAAD,CADwD,EAExD;AACA;AACCC,WAAD,IACCA,WAAW,GAAGE,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,GAAzB,CAA8BC,GAAD,IAASL,WAAW,CAACK,GAAD,CAAjD,CAAH,GAA6D,EALjB,CAAlD;AAQP,OAAO,MAAMC,gBAAgB,GAAIC,kBAAD,IAC/BZ,cAAc,CAAC,CAACI,iBAAD,CAAD,EAAuBC,WAAD,IACnCA,WAAW,GAAGA,WAAW,CAACO,kBAAD,CAAd,GAAqC,IADnC,CADR;AAKP,OAAO,MAAMC,0BAA0B,GAAGb,cAAc,CACvD,CAACC,UAAD,CADuD,EAEtDE,IAAD,IAAUA,IAAI,CAACW,UAFwC,CAAjD,C,CAKP;;AACA,OAAO,MAAMC,yBAAyB,GAAGf,cAAc,CACtD,CAACC,UAAD,CADsD,EAEtD;AACCE,IAAD,IAAU,CAAC,CAACA,IAAI,CAACE,WAHqC,CAAhD","sourcesContent":["import { createSelector } from 'reselect';\n\nconst selectShop = (state) => state.shop;\n\nexport const selectCollections = createSelector(\n\t[selectShop],\n\t(shop) => shop.collections\n);\n\nexport const selectCollectionsForPreview = createSelector(\n\t[selectCollections],\n\t// get all the keys, map over that array of keys, so we get the value of\n\t// the colections object at that key whihc returns an array\n\t(collections) =>\n\t\tcollections ? Object.keys(collections).map((key) => collections[key]) : []\n);\n\nexport const selectCollection = (collectionUrlParam) =>\n\tcreateSelector([selectCollections], (collections) =>\n\t\tcollections ? collections[collectionUrlParam] : null\n\t);\n\nexport const selectIsCollectionFetching = createSelector(\n\t[selectShop],\n\t(shop) => shop.isFetching\n);\n\n// tells us if our state has loaded so we won't rended a component with null values\nexport const selectIsCollectionsLoaded = createSelector(\n\t[selectShop],\n\t// if null, which is a falsy value we double \"!!\" and we get the actual boolean value\n\t(shop) => !!shop.collections\n);\n"]},"metadata":{},"sourceType":"module"}