{"ast":null,"code":"import { takeLatest, call, put } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapShotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nimport { FETCH_COLLECTIONS_START } from './shop.types';\nexport function* fetchCollectionsAsync() {\n  // yield console.log('I am fired');\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get(); // call(func, parameters)\n\n    const collectionsMap = yield call(convertCollectionsSnapShotToMap, snapshot); // put, dispatches our action\n\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  // takes the latest call\n  yield takeLatest(FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/home/xavi/fullstack/react-crown-clothing/src/redux/shop/shop.sagas.js"],"names":["takeLatest","call","put","firestore","convertCollectionsSnapShotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","FETCH_COLLECTIONS_START","fetchCollectionsAsync","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionsStart"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,QAAsC,oBAAtC;AAEA,SACCC,SADD,EAECC,+BAFD,QAGO,+BAHP;AAKA,SACCC,uBADD,EAECC,uBAFD,QAGO,gBAHP;AAKA,SAASC,uBAAT,QAAwC,cAAxC;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACxC;AAEA,MAAI;AACH,UAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB,CAFG,CAGH;;AACA,UAAMC,cAAc,GAAG,MAAMZ,IAAI,CAChCG,+BADgC,EAEhCO,QAFgC,CAAjC,CAJG,CAQH;;AACA,UAAMT,GAAG,CAACG,uBAAuB,CAACQ,cAAD,CAAxB,CAAT;AACA,GAVD,CAUE,OAAOC,KAAP,EAAc;AACf,UAAMZ,GAAG,CAACI,uBAAuB,CAACQ,KAAK,CAACC,OAAP,CAAxB,CAAT;AACA;AACD;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACxC;AACA,QAAMhB,UAAU,CAACO,uBAAD,EAA0BC,qBAA1B,CAAhB;AACA","sourcesContent":["import { takeLatest, call, put } from 'redux-saga/effects';\n\nimport {\n\tfirestore,\n\tconvertCollectionsSnapShotToMap,\n} from '../../firebase/firebase.utils';\n\nimport {\n\tfetchCollectionsSuccess,\n\tfetchCollectionsFailure,\n} from './shop.actions';\n\nimport { FETCH_COLLECTIONS_START } from './shop.types';\n\nexport function* fetchCollectionsAsync() {\n\t// yield console.log('I am fired');\n\n\ttry {\n\t\tconst collectionRef = firestore.collection('collections');\n\t\tconst snapshot = yield collectionRef.get();\n\t\t// call(func, parameters)\n\t\tconst collectionsMap = yield call(\n\t\t\tconvertCollectionsSnapShotToMap,\n\t\t\tsnapshot\n\t\t);\n\t\t// put, dispatches our action\n\t\tyield put(fetchCollectionsSuccess(collectionsMap));\n\t} catch (error) {\n\t\tyield put(fetchCollectionsFailure(error.message));\n\t}\n}\n\nexport function* fetchCollectionsStart() {\n\t// takes the latest call\n\tyield takeLatest(FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\n"]},"metadata":{},"sourceType":"module"}