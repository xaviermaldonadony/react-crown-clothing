{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport { GOOGLE_SIGN_IN_START } from './user.types';\nimport { googleSignInSuccess, googleSignInFailure, emailSignInSuccess, emailSignInFailure } from './user.actions';\nimport { auth, googleProvider, createuserProfileDocument } from '../../firebase/firebase.utils';\nexport function* signInWithGoogle() {\n  // api call\n  try {\n    // we want access to useRef that's why we call it signInWithPopup here instead from utils\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    console.log(user);\n    const userRef = yield call(createuserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart)]);\n}","map":{"version":3,"sources":["/home/xavi/fullstack/react-crown-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","GOOGLE_SIGN_IN_START","googleSignInSuccess","googleSignInFailure","emailSignInSuccess","emailSignInFailure","auth","googleProvider","createuserProfileDocument","signInWithGoogle","user","signInWithPopup","console","log","userRef","userSnapshot","get","id","data","error","onGoogleSignInStart","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AAEA,SAASC,oBAAT,QAAqC,cAArC;AAEA,SACCC,mBADD,EAECC,mBAFD,EAGCC,kBAHD,EAICC,kBAJD,QAKO,gBALP;AAOA,SACCC,IADD,EAECC,cAFD,EAGCC,yBAHD,QAIO,+BAJP;AAMA,OAAO,UAAUC,gBAAV,GAA6B;AACnC;AACA,MAAI;AACH;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMJ,IAAI,CAACK,eAAL,CAAqBJ,cAArB,CAAvB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,UAAMI,OAAO,GAAG,MAAMd,IAAI,CAACQ,yBAAD,EAA4BE,IAA5B,CAA1B;AACA,UAAMK,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMlB,GAAG,CACRI,mBAAmB,CAAC;AAAEe,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CADX,CAAT;AAGA,GATD,CASE,OAAOC,KAAP,EAAc;AACf,UAAMrB,GAAG,CAACK,mBAAmB,CAACgB,KAAD,CAApB,CAAT;AACA;AACD;AAED,OAAO,UAAUC,mBAAV,GAAgC;AACtC,QAAMvB,UAAU,CAACI,oBAAD,EAAuBQ,gBAAvB,CAAhB;AACA;AAED,OAAO,UAAUY,SAAV,GAAsB;AAC5B,QAAMtB,GAAG,CAAC,CAACC,IAAI,CAACoB,mBAAD,CAAL,CAAD,CAAT;AACA","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\n\nimport { GOOGLE_SIGN_IN_START } from './user.types';\n\nimport {\n\tgoogleSignInSuccess,\n\tgoogleSignInFailure,\n\temailSignInSuccess,\n\temailSignInFailure,\n} from './user.actions';\n\nimport {\n\tauth,\n\tgoogleProvider,\n\tcreateuserProfileDocument,\n} from '../../firebase/firebase.utils';\n\nexport function* signInWithGoogle() {\n\t// api call\n\ttry {\n\t\t// we want access to useRef that's why we call it signInWithPopup here instead from utils\n\t\tconst { user } = yield auth.signInWithPopup(googleProvider);\n\t\tconsole.log(user);\n\t\tconst userRef = yield call(createuserProfileDocument, user);\n\t\tconst userSnapshot = yield userRef.get();\n\t\tyield put(\n\t\t\tgoogleSignInSuccess({ id: userSnapshot.id, ...userSnapshot.data() })\n\t\t);\n\t} catch (error) {\n\t\tyield put(googleSignInFailure(error));\n\t}\n}\n\nexport function* onGoogleSignInStart() {\n\tyield takeLatest(GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nexport function* userSagas() {\n\tyield all([call(onGoogleSignInStart)]);\n}\n"]},"metadata":{},"sourceType":"module"}