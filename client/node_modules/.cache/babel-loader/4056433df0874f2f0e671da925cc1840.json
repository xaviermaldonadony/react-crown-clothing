{"ast":null,"code":"export const addItemToCart = (cartItems, cartItemToAdd) => {\n  const existingCartItem = cartItems.find(cartitem => cartitem.id === cartItemToAdd.id);\n\n  if (existingCartItem) {\n    // returns a new array\n    return cartItems.map(cartItem => cartItem.id === cartItemToAdd.id ? { ...cartItem,\n      quantity: ++cartItem.quantity\n    } : cartItem);\n  } // if not found  in our array, create a new array\n\n\n  return [...cartItems, { ...cartItemToAdd,\n    quantity: 1\n  }];\n};\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToRemove.id);\n\n  if (existingCartItem.quantity === 1) {\n    return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id);\n  }\n\n  return cartItems.map(cartItem => cartItem.id === cartItemToRemove.id ? { ...cartItem,\n    quantity: cartItem.quantity - 1\n  } : cartItem);\n};","map":{"version":3,"sources":["/home/xavi/fullstack/react-crown-clothing/client/src/redux/cart/cart.utils.js"],"names":["addItemToCart","cartItems","cartItemToAdd","existingCartItem","find","cartitem","id","map","cartItem","quantity","removeItemFromCart","cartItemToRemove","filter"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAYC,aAAZ,KAA8B;AAC1D,QAAMC,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CACvBC,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EADpB,CAAzB;;AAIA,MAAIH,gBAAJ,EAAsB;AACrB;AACA,WAAOF,SAAS,CAACM,GAAV,CAAeC,QAAD,IACpBA,QAAQ,CAACF,EAAT,KAAgBJ,aAAa,CAACI,EAA9B,GACG,EAAE,GAAGE,QAAL;AAAeC,MAAAA,QAAQ,EAAE,EAAED,QAAQ,CAACC;AAApC,KADH,GAEGD,QAHG,CAAP;AAKA,GAZyD,CAc1D;;;AACA,SAAO,CAAC,GAAGP,SAAJ,EAAe,EAAE,GAAGC,aAAL;AAAoBO,IAAAA,QAAQ,EAAE;AAA9B,GAAf,CAAP;AACA,CAhBM;AAkBP,OAAO,MAAMC,kBAAkB,GAAG,CAACT,SAAD,EAAYU,gBAAZ,KAAiC;AAClE,QAAMR,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CACvBI,QAAD,IAAcA,QAAQ,CAACF,EAAT,KAAgBK,gBAAgB,CAACL,EADvB,CAAzB;;AAIA,MAAIH,gBAAgB,CAACM,QAAjB,KAA8B,CAAlC,EAAqC;AACpC,WAAOR,SAAS,CAACW,MAAV,CAAkBJ,QAAD,IAAcA,QAAQ,CAACF,EAAT,KAAgBK,gBAAgB,CAACL,EAAhE,CAAP;AACA;;AAED,SAAOL,SAAS,CAACM,GAAV,CAAeC,QAAD,IACpBA,QAAQ,CAACF,EAAT,KAAgBK,gBAAgB,CAACL,EAAjC,GACG,EAAE,GAAGE,QAAL;AAAeC,IAAAA,QAAQ,EAAED,QAAQ,CAACC,QAAT,GAAoB;AAA7C,GADH,GAEGD,QAHG,CAAP;AAKA,CAdM","sourcesContent":["export const addItemToCart = (cartItems, cartItemToAdd) => {\n\tconst existingCartItem = cartItems.find(\n\t\t(cartitem) => cartitem.id === cartItemToAdd.id\n\t);\n\n\tif (existingCartItem) {\n\t\t// returns a new array\n\t\treturn cartItems.map((cartItem) =>\n\t\t\tcartItem.id === cartItemToAdd.id\n\t\t\t\t? { ...cartItem, quantity: ++cartItem.quantity }\n\t\t\t\t: cartItem\n\t\t);\n\t}\n\n\t// if not found  in our array, create a new array\n\treturn [...cartItems, { ...cartItemToAdd, quantity: 1 }];\n};\n\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => {\n\tconst existingCartItem = cartItems.find(\n\t\t(cartItem) => cartItem.id === cartItemToRemove.id\n\t);\n\n\tif (existingCartItem.quantity === 1) {\n\t\treturn cartItems.filter((cartItem) => cartItem.id !== cartItemToRemove.id);\n\t}\n\n\treturn cartItems.map((cartItem) =>\n\t\tcartItem.id === cartItemToRemove.id\n\t\t\t? { ...cartItem, quantity: cartItem.quantity - 1 }\n\t\t\t: cartItem\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}