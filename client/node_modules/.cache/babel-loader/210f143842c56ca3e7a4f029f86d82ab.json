{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport { EMAIL_SIGN_IN_START, GOOGLE_SIGN_IN_START } from './user.types';\nimport { signInSuccess, signInFailure } from './user.actions';\nimport { auth, googleProvider, createuserProfileDocument } from '../../firebase/firebase.utils';\nimport { useRef } from 'react';\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createuserProfileDocument, userAuth);\n    yield getSnapshotFromUserAuth(userRef);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  // api call\n  try {\n    // we want access to useRef that's why we call it signInWithPopup here instead from utils\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createuserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/home/xavi/fullstack/react-crown-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","EMAIL_SIGN_IN_START","GOOGLE_SIGN_IN_START","signInSuccess","signInFailure","auth","googleProvider","createuserProfileDocument","useRef","getSnapshotFromUserAuth","userAuth","userRef","error","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","userSnapshot","get","id","data","onEmailSignInStart","onGoogleSignInStart","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AAEA,SAASC,mBAAT,EAA8BC,oBAA9B,QAA0D,cAA1D;AAEA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,gBAA7C;AAEA,SACCC,IADD,EAECC,cAFD,EAGCC,yBAHD,QAIO,+BAJP;AAKA,SAASC,MAAT,QAAuB,OAAvB;AAEA,OAAO,UAAUC,uBAAV,CAAkCC,QAAlC,EAA4C;AAClD,MAAI;AACH,UAAMC,OAAO,GAAG,MAAMX,IAAI,CAACO,yBAAD,EAA4BG,QAA5B,CAA1B;AACA,UAAMD,uBAAuB,CAACE,OAAD,CAA7B;AACA,GAHD,CAGE,OAAOC,KAAP,EAAc;AACf,UAAMd,GAAG,CAACM,aAAa,CAACQ,KAAD,CAAd,CAAT;AACA;AACD;AAED,OAAO,UAAUC,gBAAV,GAA6B;AACnC;AACA,MAAI;AACH;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMT,IAAI,CAACU,eAAL,CAAqBT,cAArB,CAAvB;AACA,UAAMG,uBAAuB,CAACK,IAAD,CAA7B;AACA,GAJD,CAIE,OAAOF,KAAP,EAAc;AACf,UAAMd,GAAG,CAACM,aAAa,CAACQ,KAAD,CAAd,CAAT;AACA;AACD;AAED,OAAO,UAAUI,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EAA4D;AAClE,MAAI;AACH,UAAM;AAAEL,MAAAA;AAAF,QAAW,MAAMT,IAAI,CAACe,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAvB;AACA,UAAMR,OAAO,GAAG,MAAMX,IAAI,CAACO,yBAAD,EAA4BO,IAA5B,CAA1B;AACA,UAAMO,YAAY,GAAG,MAAMV,OAAO,CAACW,GAAR,EAA3B;AACA,UAAMxB,GAAG,CAACK,aAAa,CAAC;AAAEoB,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CAAd,CAAT;AACA,GALD,CAKE,OAAOZ,KAAP,EAAc;AACf,UAAMd,GAAG,CAACM,aAAa,CAACQ,KAAD,CAAd,CAAT;AACA;AACD;AAED,OAAO,UAAUa,kBAAV,GAA+B;AACrC,QAAM5B,UAAU,CAACI,mBAAD,EAAsBe,eAAtB,CAAhB;AACA;AAED,OAAO,UAAUU,mBAAV,GAAgC;AACtC,QAAM7B,UAAU,CAACK,oBAAD,EAAuBW,gBAAvB,CAAhB;AACA;AAED,OAAO,UAAUc,SAAV,GAAsB;AAC5B,QAAM5B,GAAG,CAAC,CAACC,IAAI,CAAC0B,mBAAD,CAAL,EAA4B1B,IAAI,CAACyB,kBAAD,CAAhC,CAAD,CAAT;AACA","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\n\nimport { EMAIL_SIGN_IN_START, GOOGLE_SIGN_IN_START } from './user.types';\n\nimport { signInSuccess, signInFailure } from './user.actions';\n\nimport {\n\tauth,\n\tgoogleProvider,\n\tcreateuserProfileDocument,\n} from '../../firebase/firebase.utils';\nimport { useRef } from 'react';\n\nexport function* getSnapshotFromUserAuth(userAuth) {\n\ttry {\n\t\tconst userRef = yield call(createuserProfileDocument, userAuth);\n\t\tyield getSnapshotFromUserAuth(userRef);\n\t} catch (error) {\n\t\tyield put(signInFailure(error));\n\t}\n}\n\nexport function* signInWithGoogle() {\n\t// api call\n\ttry {\n\t\t// we want access to useRef that's why we call it signInWithPopup here instead from utils\n\t\tconst { user } = yield auth.signInWithPopup(googleProvider);\n\t\tyield getSnapshotFromUserAuth(user);\n\t} catch (error) {\n\t\tyield put(signInFailure(error));\n\t}\n}\n\nexport function* signInWithEmail({ payload: { email, password } }) {\n\ttry {\n\t\tconst { user } = yield auth.signInWithEmailAndPassword(email, password);\n\t\tconst userRef = yield call(createuserProfileDocument, user);\n\t\tconst userSnapshot = yield userRef.get();\n\t\tyield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n\t} catch (error) {\n\t\tyield put(signInFailure(error));\n\t}\n}\n\nexport function* onEmailSignInStart() {\n\tyield takeLatest(EMAIL_SIGN_IN_START, signInWithEmail);\n}\n\nexport function* onGoogleSignInStart() {\n\tyield takeLatest(GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nexport function* userSagas() {\n\tyield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}\n"]},"metadata":{},"sourceType":"module"}